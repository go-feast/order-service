version: '3.9'

networks:
  api:
    driver: bridge

x-service-volume:  &service-volume
  type: bind
  source: ./
  target: /app

services:
  service-consumer:
    environment:
      ENVIRONMENT: production
      METRICS_HOST: service-consumer
      METRICS_PORT: 8082
      DB_URL: db
      REDIS_URL: redis
      KAFKA_URL: kafka:29092
      OTEL_EXPORTER_OTLP_TRACE_ENDPOINT: jaeger:4318
    build:
      dockerfile: Dockerfile
      context: ./
      target: dev_consumer
      args:
        - metric_port_consumer=8083
    restart: on-failure
    volumes:
      - *service-volume
    command:
      - "CompileDaemon"
      - "-log-prefix=false"
      - "-graceful-timeout=10"
      - "-graceful-kill=true"
      - "-exclude-dir=.git -exclude-dir=.run -exclude-dir=.github"
      - "-build=/go/bin/task build-api-consumer"
      - "-command=/app/bin/api-consumer"
    ports:
      - "8083:8083" # metric server port. Make sure u change it in deployment/development/external/prometheus.yml

  service:
    environment:
        ENVIRONMENT: production
        SERVER_HOST: service
        SERVER_PORT: 8080
        METRICS_HOST: service
        METRICS_PORT: 8081
        DB_URL: db # to change
        REDIS_URL: redis # to change
        KAFKA_URL: kafka:29092
        OTEL_EXPORTER_OTLP_TRACE_ENDPOINT: jaeger:4318
        SERVER_WRITETIMEOUT: 10s
        SERVER_READTIMEOUT: 5s
        SERVER_IDLETIMEOUT: 5s
    build:
      dockerfile: Dockerfile
      context: ./
      target: dev_service
      args:
        - service_port=8080
        - service_metrics_port=8081
    restart: on-failure
    volumes:
      - *service-volume
    command:
      - "CompileDaemon"
      - "-log-prefix=false"
      - "-graceful-timeout=10"
      - "-graceful-kill=true"
      - "-exclude-dir=.git -exclude-dir=.run -exclude-dir=.github"
      - "-build=/go/bin/task build-api-server"
      - "-command=/app/bin/api-server"
    ports:
      - "8080:8080" # server port
      - "8081:8081" # metric server port
    healthcheck:
      test: ["CMD", "curl", "service:8080/healthz" ]
      interval: 5s
      retries: 10

  prometheus:
    depends_on:
      - service
    image: prom/prometheus:v2.40.4
    ports:
      - "9090:9090"
    volumes:
      - ./deployment/development/external/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml

  jaeger:
    image: jaegertracing/all-in-one:1.52
    environment:
        COLLECTOR_OTLP_ENABLED: true
    ports:
      - "16686:16686" # serve frontend
      - "4318:4318" # accept OpenTelemetry Protocol (OTLP) over HTTP
      - "4317:4317" # accept OpenTelemetry Protocol (OTLP) over gRPC
    networks:
      - api
    depends_on:
      - service

  kafka:
    image: confluentinc/confluent-local:7.6.0
    hostname: broker
    container_name: broker
    ports:
      - "8082:8082"
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@broker:29093'
      KAFKA_LISTENERS: 'PLAINTEXT://broker:29092,CONTROLLER://broker:29093,PLAINTEXT_HOST://0.0.0.0:9092'
      KAFKA_NUM_PARTITIONS: '3'
    networks:
      - api
