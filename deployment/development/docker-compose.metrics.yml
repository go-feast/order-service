version: '3.9'

networks:
  api:
    driver: bridge

services:
  app:
    environment:
        ENVIRONMENT: production
        SERVER_HOST: app
        SERVER_PORT: 8080
        SERVER_METRICS_HOST: app
        SERVER_METRICS_PORT: 8081
        SERVER_DB_URL: db
        SERVER_REDIS_URL: redis
        SERVER_RABBITMQ_URL: rabbit
        OTEL_EXPORTER_OTLP_TRACE_ENDPOINT: jaeger:4318
        SERVER_WRITETIMEOUT: 10s
        SERVER_READTIMEOUT: 5s
        SERVER_IDLETIMEOUT: 5s
    build:
      dockerfile: Dockerfile
      context: ../../.
    ports:
      - "8080:8080" # server port
      - "8081:8081" # metric server port
    healthcheck:
      test: ["CMD", "curl", "http://$SERVER_HOST:$SERVER_PORT/healthz" ]
      interval: 5s
      retries: 10

  prometheus:
    depends_on:
      - app
    image: prom/prometheus:v2.40.4
    ports:
      - "9090:9090"
    volumes:
      - ./external/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml

  jaeger:
    image: jaegertracing/all-in-one:1.52
    ports:
      - "16686:16686" # serve frontend
      - "4318:4318" # accept OpenTelemetry Protocol (OTLP) over HTTP
      - "4317:4317" # accept OpenTelemetry Protocol (OTLP) over gRPC
    networks:
      - api
    depends_on:
      - app